1:"$Sreact.fragment"
2:I[7114,["874","static/chunks/874-3b2e13d78f8618dd.js","63","static/chunks/63-28726393f539b62f.js","177","static/chunks/app/layout-16f2661fbedcd9f0.js"],"Header"]
3:I[7555,[],""]
4:I[1295,[],""]
6:I[9665,[],"OutletBoundary"]
9:I[9665,[],"ViewportBoundary"]
b:I[9665,[],"MetadataBoundary"]
d:I[6614,[],""]
:HL["/_next/static/media/e4af272ccee01ff0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/c9a6334638ac74e5.css","style"]
0:{"P":null,"b":"ea6fFuVh7c1FkHOVKBMHH","p":"","c":["","posts","apply-aws-iac"],"i":false,"f":[[["",{"children":["posts",{"children":[["id","apply-aws-iac","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c9a6334638ac74e5.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ko","children":["$","body",null,{"className":"__className_e8ce0c bg-white text-black dark:bg-zinc-900 dark:text-white","children":[["$","$L2",null,{}],["$","main",null,{"className":"max-w-6xl mx-auto px-4 py-8","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["id","apply-aws-iac","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5","$undefined",null,["$","$L6",null,{"children":["$L7","$L8",null]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","RPBVb7uyHmw0wCvJFmvRC",{"children":[["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$Lb",null,{"children":"$Lc"}]]}],false]],"m":"$undefined","G":["$d","$undefined"],"s":false,"S":true}
e:I[6874,["874","static/chunks/874-3b2e13d78f8618dd.js","880","static/chunks/app/posts/%5Bid%5D/page-bb0e289bc5bd1f55.js"],""]
10:I[7161,["874","static/chunks/874-3b2e13d78f8618dd.js","880","static/chunks/app/posts/%5Bid%5D/page-bb0e289bc5bd1f55.js"],"default"]
f:T1ee1,<h2>What is AWS?</h2>
<p>AWS: Amazon Web Service</p>
<p>대표적인 Cloud Infra를 제공해주는 회사로 전세계에 서비스를 제공할 수 있는 Cloud Platform을 제공해준다.</p>
<h2>What is IaC?</h2>
<p>IaC: Infra as Code</p>
<p>Infra 관리를 Code를 통해서 할 수 있게 해주는 기술이다.</p>
<p>IaC란 기술은 Cloud라는 기술이 없었다면 생길 수 없던 기술이다.</p>
<p>On-premiss 환경에서 인프라 구축은 코드로 절대할 수 없다.</p>
<p>직접 인터넷 선을 연결해야되고 서버 장비도 들여야되고 이러한 작업을 Code로 한다는 건 말이 안된다.</p>
<p>하지만 Cloud라는 개념이 생기면서 웹상에서 클릭 몇번으로 자신의 서버를 만들 수 있는 세상이 되면서 이러한 Cloud 환경에서의 리소스 관리를 어떻게 조금 더 효율적으로 관리할 것인가라는 요구사항이 생겼다.</p>
<p>이러한 Cloud Infra를 관리할 사람은 당연히 개발자이고 개발자에게 가장 친숙한 것은? 당연하 Code일 것이다.</p>
<p>심지어 Code로 관리하게 되면 git과 같은 형상관리/버전관리 툴을 이용해서 변경내용을 전부 기록으로 남길 수 있다.</p>
<h3><a href="https://developer.hashicorp.com/terraform">Terraform</a></h3>
<p>나는 그 중에서 대표적인 IaC 중 하나인 terraform을 사용하기로 했다.</p>
<p>Terraform은 <a href="https://www.hashicorp.com/ko">Hashicorp</a>라는 회사에서 개발된 IaC 도구이다. HCL(HashiCorp configuration language)이라는 독자적 언어를 사용한다.</p>
<p>내가 Terraform을 선택한 몇몇가지 이유들이다.</p>
<ol>
<li>커뮤니티가 되게 활발한 것</li>
<li>독자적인 언어이지만 이해하기 쉬운 가독성 높은 언어인 것</li>
<li>필요한 리소스 생성에 대한 레퍼런스를 쉽게 찾을 수 있는 것</li>
<li>(아마 가장 큰 이유) 최근 회사에서 도입을 진행하면서 사용했었던 것</li>
</ol>
<p>뭐 이러한 이유로 인해서 나는 IaC로 Terraform을 사용하기로 했다.</p>
<h3>How to CI/CD</h3>
<p>Terraform을 사용할 때 고민했던 것이 권한관리 및 CI/CD이다.</p>
<ol>
<li>Terraform으로 IaC를 사용하려면 거의 최고 권한자인 Administrator에 준하는 권한이 필요하다.
<ol>
<li>생성, 삭제, 수정이 모든 AWS 리소스들에 대해서 가능해야되기 때문이다.</li>
</ol>
</li>
<li>이러한 권한 그냥 아무 유저 혹은 아무 Role에게나 부여할 수 없다.
<ol>
<li>개인 프로젝트이긴 하지만, 혹시나 만약 내 정보가 탈취가 된다거나 나중에 협업을 진행하게 된다면 이 부분은 큰 문제로 작용될 것이다.</li>
</ol>
</li>
</ol>
<h3>Terraform Cloud</h3>
<p>그래서 나는 Terraform에서 제공해주는 Terraform Cloud를 통해서 CI/CD를 구축했다.</p>
<h4>Terraform Cloud 계정 생성</h4>
<p>일단 Terraform Cloud는 Hashicorp 계정으로 바로 로그인을 할 수 있다. Hashicorp 계정은 Github을 통해 OAuth2 인증이 가능하다.</p>
<p>당연히 개발자들의 모든 연결고리가 되는 계정인 Github이 있기 때문에 바로 Github을 통해서 계정을 생성했다.</p>
<table>
<thead>
<tr>
<th>Terraform cloud login</th>
<th>Hashcorp Login</th>
</tr>
</thead>
<tbody>
<tr>
<td><img src="/images/posts/contents/apply-aws-iac/terraform-cloud-login.png" alt="terraform-cloud-login"></td>
<td><img src="/images/posts/contents/apply-aws-iac/hashicorp-login.png" alt="hashicorp-login"></td>
</tr>
</tbody>
</table>
<h4>AWS IAM Role 생성 및 Terraform Cloud 연동</h4>
<p>AWS의 리소스 생성과 사용에 대한 모든 관리는 AWS IAM을 통해 권한관리를 한다.</p>
<p>Terraform Cloud 역시 AWS의 리소스 생성을 하려면 AWS IAM을 사용해야된다.</p>
<ul>
<li>AWS IAM OpenID Connect 생성
<img src="/images/posts/contents/apply-aws-iac/aws-iam-terrafom-openid-connect.png" alt="aws-iam-terraform-openid-connect"></li>
<li>IAM Role 생성 및 Trust Relationship
<img src="/images/posts/contents/apply-aws-iac/aws-iam-role-terraform-tr.png" alt="aws-iam-role-terraform-tr"></li>
<li>Terraform Cloud Workspace Variable 추가
<img src="/images/posts/contents/apply-aws-iac/terraform-cloud-variables.png" alt="terraform-cloud-variables"></li>
</ul>
<h4>Terraform Cloud VCS Github Repository 연결</h4>
<p>위에서 말했 듯이 Terraform은 Code를 통해서 Infra를 관리한다. 즉, 기본적으로 Code가 관리되어야한다.</p>
<p>우리는 코드를 관리하는 가장 혁신적인 도구인 Git을 사용하고 있고 Github를 통해서 공유하고 관리할 수 있다.</p>
<p>Terraform은 Github를 사용해서 VCS를 진행할 수 있으며 IaC 코드가 관리되는 Repository를 연결해서 Code를 가져와서 provisioning 할 수 있다.</p>
<p><img src="/images/posts/contents/apply-aws-iac/terraform-cloud-vcs.png" alt="terraform-cloud-vcs"></p>
<h4>Infra 구축</h4>
<p>이제 연동 준비는 모두 끝났으니 간단하게 VPC와 subnet, 라우팅 테이블들을 만들어보자</p>
<ul>
<li>
<p>vpc</p>
<pre><code class="hljs language-hcl">resource "aws_vpc" "main" {
  cidr_block = "10.0.0.0/16"

  enable_dns_hostnames = true
  enable_dns_support   = true

  tags = {
    Name = "my-vpc"
  }
}
</code></pre>
</li>
<li>
<p>subnet</p>
<pre><code class="hljs language-hcl">data "aws_availability_zones" "available" {
  state = "available"
}

locals {
  az                 = data.aws_availability_zones.available.names
  public_subnet_cidr = ["10.0.0.0/26", "10.0.0.64/26", "10.0.0.128/26"]
}

resource "aws_subnet" "public" {
  vpc_id = aws_vpc.main.id
  count  = length(locals.public_subnet_cidr)

  cidr_block        = locals.public_subnet_cidr[count.index]
  availability_zone = local.az[count.index]

  map_public_ip_on_launch = true

  tags = {
    Name = "my-vpc-public-${format("%02s", count.index)}-${local.az[count.index]}"
  }
}
</code></pre>
</li>
<li>
<p>routing table</p>
<pre><code class="hljs language-hcl">resource "aws_route_table" "public" {
  vpc_id = aws_vpc.main.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.igw.id
  }

  tags = {
    Name = "my-vpc-public-route-table"
  }
}
</code></pre>
</li>
</ul>
<h2>Result</h2>
<p>작성한 Code를 push하면 Planning을 하고 위에서 설정한 Base Branch에 머지가 되면 Planed &#x26; Apply를 진행한다.</p>
<p>사진은 기존 terraform cloud로 vpc를 생성했던 이력이 없어서 다른 Planned 기록과 Applied 기록을 가져왔다.</p>
<h3>Planed</h3>
<p><img src="/images/posts/contents/apply-aws-iac/terraform-plan.png" alt="terraform-plan"></p>
<h3>Applied</h3>
<p><img src="/images/posts/contents/apply-aws-iac/terraform-apply.png" alt="terraform-apply"></p>
<h3>AWS Console Result</h3>
<p>이제 정상적으로 AWS에 VPC가 생성되었는지 확인해보면 아래처럼 내가 설정한 형태로 Provisioning 되어 있는 것을 볼 수 있다.</p>
<p><img src="/images/posts/contents/apply-aws-iac/aws-provision-result.png" alt="aws-provision-result"></p>
<h2>Finished</h2>
<p>AWS에 대해서는 이전 블로그에서 간단하게 설명했었다.</p>
<p>하지만 console을 통해서 일일이 관리하다보니 내가 언제 생성했었는지도 모르는 리소스가 계속 남아있고 또 어딘가에서 비용을 계속 잡아먹고 있지만 찾지 못하는 그런 리소스들이 하나둘 생기기 시작했다.</p>
<p>IaC라는 형태의 Cloud Infra 관리 방법을 알게 되면서 관리되지 않는 리소스는 없게 되었고 git commit 이력을 통해서 어떤 변경사항이 있었는지 모두 확인할 수 있게 되어 Cloud Infra 관리가 더 수월해졌다.</p>
<p>IaC라는 기술이 다른 형태로도 제공이 되는 도구도 있어서 조금 더 공부하고 적용해보려고 한다.</p>5:["$","div",null,{"className":"max-w-4xl mx-auto p-4 sm:p-8","children":[["$","div",null,{"className":"mb-8","children":["$","$Le",null,{"href":"/","className":"text-accent hover:underline flex items-center","children":[["$","svg",null,{"className":"w-4 h-4 mr-1","fill":"none","stroke":"currentColor","viewBox":"0 0 24 24","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"strokeLinecap":"round","strokeLinejoin":"round","strokeWidth":"2","d":"M10 19l-7-7m0 0l7-7m-7 7h18"}]}],"Back to home"]}]}],["$","h1",null,{"className":"text-4xl font-extrabold text-foreground mb-4 leading-tight","children":"데린이의 AWS Cloud, IaC Terraform Cloud 구축기"}],["$","p",null,{"className":"text-lg text-muted-foreground mb-6","children":"2025-07-01"}],["$","div",null,{"className":"mb-6 flex flex-wrap gap-2","children":[["$","span","infra",{"className":"bg-blue-600/10 text-blue-400 px-2 py-0.5 rounded text-xs font-medium border border-blue-600/20","children":"infra"}]]}],["$","article",null,{"className":"prose lg:prose-xl prose-lg dark:prose-invert max-w-none","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$f"}}]}],["$","div",null,{"className":"mt-16 pt-8 border-t border-card","children":[["$","h2",null,{"className":"text-2xl font-bold text-foreground mb-6","children":"Comments"}],["$","$L10",null,{"repo":"comstering/comstering.github.io","repoId":"MDEwOlJlcG9zaXRvcnkzNjI0MjQ3NDk=","category":"Announcements","categoryId":"MDE4OkRpc2N1c3Npb25DYXRlZ29yeTMyOTQ4OTYw","mapping":"pathname","strict":"0","reactionsEnabled":"1","emitMetadata":"0","inputPosition":"top","theme":"dark_high_contrast","lang":"ko","loading":"lazy"}]]}]]}]
a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
8:null
c:[["$","title","0",{"children":"데린이의 AWS Cloud, IaC Terraform Cloud 구축기"}],["$","meta","1",{"name":"description","content":"Terraform 코드로 간편하게 AWS Cloud Infra를 구축하자."}],["$","meta","2",{"name":"keywords","content":"infra, aws, terraform, IaC"}],["$","meta","3",{"property":"og:title","content":"데린이의 AWS Cloud, IaC Terraform Cloud 구축기"}],["$","meta","4",{"property":"og:description","content":"Terraform 코드로 간편하게 AWS Cloud Infra를 구축하자."}],["$","meta","5",{"property":"og:url","content":"https://comstering.github.io/posts/apply-aws-iac"}],["$","meta","6",{"property":"og:image","content":"https://comstering.github.io/terraform.webp"}],["$","meta","7",{"property":"og:type","content":"article"}],["$","meta","8",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","9",{"name":"twitter:title","content":"데린이의 AWS Cloud, IaC Terraform Cloud 구축기"}],["$","meta","10",{"name":"twitter:description","content":"Terraform 코드로 간편하게 AWS Cloud Infra를 구축하자."}],["$","meta","11",{"name":"twitter:image","content":"https://comstering.github.io/terraform.webp"}],["$","link","12",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"1024x1024"}]]
